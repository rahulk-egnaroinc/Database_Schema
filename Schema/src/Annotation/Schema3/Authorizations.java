package src3;
// Generated 13 Jun, 2016 5:44:25 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Authorizations generated by hbm2java
 */
@Entity
@Table(name = "authorizations", schema = "public", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "oauth_provider_id", "user_id" }),
		@UniqueConstraint(columnNames = { "uid", "oauth_provider_id" }) })
public class Authorizations implements java.io.Serializable {

	private int id;
	private OauthProviders oauthProviders;
	private Users users;
	private String uid;
	private Date createdAt;
	private Date updatedAt;
	private String lastToken;

	public Authorizations() {
	}

	public Authorizations(int id, OauthProviders oauthProviders, Users users, String uid) {
		this.id = id;
		this.oauthProviders = oauthProviders;
		this.users = users;
		this.uid = uid;
	}

	public Authorizations(int id, OauthProviders oauthProviders, Users users, String uid, Date createdAt,
			Date updatedAt, String lastToken) {
		this.id = id;
		this.oauthProviders = oauthProviders;
		this.users = users;
		this.uid = uid;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.lastToken = lastToken;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "oauth_provider_id", nullable = false)
	public OauthProviders getOauthProviders() {
		return this.oauthProviders;
	}

	public void setOauthProviders(OauthProviders oauthProviders) {
		this.oauthProviders = oauthProviders;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "uid", nullable = false)
	public String getUid() {
		return this.uid;
	}

	public void setUid(String uid) {
		this.uid = uid;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "last_token")
	public String getLastToken() {
		return this.lastToken;
	}

	public void setLastToken(String lastToken) {
		this.lastToken = lastToken;
	}

}
