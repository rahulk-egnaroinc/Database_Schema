package src3;
// Generated 13 Jun, 2016 5:44:25 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * States generated by hbm2java
 */
@Entity
@Table(name = "states", schema = "public", uniqueConstraints = { @UniqueConstraint(columnNames = "name"),
		@UniqueConstraint(columnNames = "acronym") })
public class States implements java.io.Serializable {

	private int id;
	private String name;
	private String acronym;
	private Date createdAt;
	private Date updatedAt;
	private Set<Cities> citieses = new HashSet<Cities>(0);

	public States() {
	}

	public States(int id, String name, String acronym) {
		this.id = id;
		this.name = name;
		this.acronym = acronym;
	}

	public States(int id, String name, String acronym, Date createdAt, Date updatedAt, Set<Cities> citieses) {
		this.id = id;
		this.name = name;
		this.acronym = acronym;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.citieses = citieses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "acronym", unique = true, nullable = false)
	public String getAcronym() {
		return this.acronym;
	}

	public void setAcronym(String acronym) {
		this.acronym = acronym;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "states")
	public Set<Cities> getCitieses() {
		return this.citieses;
	}

	public void setCitieses(Set<Cities> citieses) {
		this.citieses = citieses;
	}

}
