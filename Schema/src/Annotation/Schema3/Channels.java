package src3;
// Generated 13 Jun, 2016 5:44:25 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Channels generated by hbm2java
 */
@Entity
@Table(name = "channels", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "permalink") )
public class Channels implements java.io.Serializable {

	private int id;
	private String name;
	private String description;
	private String permalink;
	private Date createdAt;
	private Date updatedAt;
	private String twitter;
	private String facebook;
	private String email;
	private String image;
	private String website;
	private String videoUrl;
	private String howItWorks;
	private String howItWorksHtml;
	private String termsUrl;
	private String videoEmbedUrl;
	private String gaCode;
	private Set<ChannelsProjects> channelsProjectses = new HashSet<ChannelsProjects>(0);
	private Set<ChannelsSubscribers> channelsSubscriberses = new HashSet<ChannelsSubscribers>(0);
	private Set<Users> userses = new HashSet<Users>(0);
	private Set<ChannelPartners> channelPartnerses = new HashSet<ChannelPartners>(0);
	private Set<ChannelPosts> channelPostses = new HashSet<ChannelPosts>(0);

	public Channels() {
	}

	public Channels(int id, String name, String description, String permalink) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.permalink = permalink;
	}

	public Channels(int id, String name, String description, String permalink, Date createdAt, Date updatedAt,
			String twitter, String facebook, String email, String image, String website, String videoUrl,
			String howItWorks, String howItWorksHtml, String termsUrl, String videoEmbedUrl, String gaCode,
			Set<ChannelsProjects> channelsProjectses, Set<ChannelsSubscribers> channelsSubscriberses,
			Set<Users> userses, Set<ChannelPartners> channelPartnerses, Set<ChannelPosts> channelPostses) {
		this.id = id;
		this.name = name;
		this.description = description;
		this.permalink = permalink;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.twitter = twitter;
		this.facebook = facebook;
		this.email = email;
		this.image = image;
		this.website = website;
		this.videoUrl = videoUrl;
		this.howItWorks = howItWorks;
		this.howItWorksHtml = howItWorksHtml;
		this.termsUrl = termsUrl;
		this.videoEmbedUrl = videoEmbedUrl;
		this.gaCode = gaCode;
		this.channelsProjectses = channelsProjectses;
		this.channelsSubscriberses = channelsSubscriberses;
		this.userses = userses;
		this.channelPartnerses = channelPartnerses;
		this.channelPostses = channelPostses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "permalink", unique = true, nullable = false)
	public String getPermalink() {
		return this.permalink;
	}

	public void setPermalink(String permalink) {
		this.permalink = permalink;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "twitter")
	public String getTwitter() {
		return this.twitter;
	}

	public void setTwitter(String twitter) {
		this.twitter = twitter;
	}

	@Column(name = "facebook")
	public String getFacebook() {
		return this.facebook;
	}

	public void setFacebook(String facebook) {
		this.facebook = facebook;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "image")
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "website")
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "video_url")
	public String getVideoUrl() {
		return this.videoUrl;
	}

	public void setVideoUrl(String videoUrl) {
		this.videoUrl = videoUrl;
	}

	@Column(name = "how_it_works")
	public String getHowItWorks() {
		return this.howItWorks;
	}

	public void setHowItWorks(String howItWorks) {
		this.howItWorks = howItWorks;
	}

	@Column(name = "how_it_works_html")
	public String getHowItWorksHtml() {
		return this.howItWorksHtml;
	}

	public void setHowItWorksHtml(String howItWorksHtml) {
		this.howItWorksHtml = howItWorksHtml;
	}

	@Column(name = "terms_url")
	public String getTermsUrl() {
		return this.termsUrl;
	}

	public void setTermsUrl(String termsUrl) {
		this.termsUrl = termsUrl;
	}

	@Column(name = "video_embed_url")
	public String getVideoEmbedUrl() {
		return this.videoEmbedUrl;
	}

	public void setVideoEmbedUrl(String videoEmbedUrl) {
		this.videoEmbedUrl = videoEmbedUrl;
	}

	@Column(name = "ga_code")
	public String getGaCode() {
		return this.gaCode;
	}

	public void setGaCode(String gaCode) {
		this.gaCode = gaCode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "channels")
	public Set<ChannelsProjects> getChannelsProjectses() {
		return this.channelsProjectses;
	}

	public void setChannelsProjectses(Set<ChannelsProjects> channelsProjectses) {
		this.channelsProjectses = channelsProjectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "channels")
	public Set<ChannelsSubscribers> getChannelsSubscriberses() {
		return this.channelsSubscriberses;
	}

	public void setChannelsSubscriberses(Set<ChannelsSubscribers> channelsSubscriberses) {
		this.channelsSubscriberses = channelsSubscriberses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "channels")
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "channels")
	public Set<ChannelPartners> getChannelPartnerses() {
		return this.channelPartnerses;
	}

	public void setChannelPartnerses(Set<ChannelPartners> channelPartnerses) {
		this.channelPartnerses = channelPartnerses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "channels")
	public Set<ChannelPosts> getChannelPostses() {
		return this.channelPostses;
	}

	public void setChannelPostses(Set<ChannelPosts> channelPostses) {
		this.channelPostses = channelPostses;
	}

}
