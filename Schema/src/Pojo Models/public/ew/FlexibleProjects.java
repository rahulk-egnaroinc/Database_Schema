package ew;
// Generated 10 Jun, 2016 12:07:08 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * FlexibleProjects generated by hbm2java
 */
@Entity
@Table(name = "flexible_projects", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "project_id") )
public class FlexibleProjects implements java.io.Serializable {

	private int id;
	private FlexibleProjectStates flexibleProjectStates;
	private Projects projects;
	private Date createdAt;
	private Date updatedAt;
	private Set<FlexibleProjectTransitions> flexibleProjectTransitionses = new HashSet<FlexibleProjectTransitions>(0);

	public FlexibleProjects() {
	}

	public FlexibleProjects(int id, FlexibleProjectStates flexibleProjectStates, Projects projects) {
		this.id = id;
		this.flexibleProjectStates = flexibleProjectStates;
		this.projects = projects;
	}

	public FlexibleProjects(int id, FlexibleProjectStates flexibleProjectStates, Projects projects, Date createdAt,
			Date updatedAt, Set<FlexibleProjectTransitions> flexibleProjectTransitionses) {
		this.id = id;
		this.flexibleProjectStates = flexibleProjectStates;
		this.projects = projects;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.flexibleProjectTransitionses = flexibleProjectTransitionses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "state", nullable = false)
	public FlexibleProjectStates getFlexibleProjectStates() {
		return this.flexibleProjectStates;
	}

	public void setFlexibleProjectStates(FlexibleProjectStates flexibleProjectStates) {
		this.flexibleProjectStates = flexibleProjectStates;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_id", unique = true, nullable = false)
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flexibleProjects")
	public Set<FlexibleProjectTransitions> getFlexibleProjectTransitionses() {
		return this.flexibleProjectTransitionses;
	}

	public void setFlexibleProjectTransitionses(Set<FlexibleProjectTransitions> flexibleProjectTransitionses) {
		this.flexibleProjectTransitionses = flexibleProjectTransitionses;
	}

}
