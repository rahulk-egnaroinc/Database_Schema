package ew;
// Generated 10 Jun, 2016 12:07:08 PM by Hibernate Tools 4.0.0.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * BalanceTransfers generated by hbm2java
 */
@Entity
@Table(name = "balance_transfers", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "project_id") )
public class BalanceTransfers implements java.io.Serializable {

	private int id;
	private Users users;
	private Projects projects;
	private BigDecimal amount;
	private String transferId;
	private Date createdAt;
	private Date updatedAt;
	private Set<BalanceTransactions> balanceTransactionses = new HashSet<BalanceTransactions>(0);
	private Set<BalanceTransferTransitions> balanceTransferTransitionses = new HashSet<BalanceTransferTransitions>(0);

	public BalanceTransfers() {
	}

	public BalanceTransfers(int id, Users users, BigDecimal amount) {
		this.id = id;
		this.users = users;
		this.amount = amount;
	}

	public BalanceTransfers(int id, Users users, Projects projects, BigDecimal amount, String transferId,
			Date createdAt, Date updatedAt, Set<BalanceTransactions> balanceTransactionses,
			Set<BalanceTransferTransitions> balanceTransferTransitionses) {
		this.id = id;
		this.users = users;
		this.projects = projects;
		this.amount = amount;
		this.transferId = transferId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.balanceTransactionses = balanceTransactionses;
		this.balanceTransferTransitionses = balanceTransferTransitionses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_id", unique = true)
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Column(name = "amount", nullable = false, precision = 131089, scale = 0)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "transfer_id")
	public String getTransferId() {
		return this.transferId;
	}

	public void setTransferId(String transferId) {
		this.transferId = transferId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "balanceTransfers")
	public Set<BalanceTransactions> getBalanceTransactionses() {
		return this.balanceTransactionses;
	}

	public void setBalanceTransactionses(Set<BalanceTransactions> balanceTransactionses) {
		this.balanceTransactionses = balanceTransactionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "balanceTransfers")
	public Set<BalanceTransferTransitions> getBalanceTransferTransitionses() {
		return this.balanceTransferTransitionses;
	}

	public void setBalanceTransferTransitionses(Set<BalanceTransferTransitions> balanceTransferTransitionses) {
		this.balanceTransferTransitionses = balanceTransferTransitionses;
	}

}
