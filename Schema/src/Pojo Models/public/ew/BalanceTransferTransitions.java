package ew;
// Generated 10 Jun, 2016 12:07:08 PM by Hibernate Tools 4.0.0.Final

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * BalanceTransferTransitions generated by hbm2java
 */
@Entity
@Table(name = "balance_transfer_transitions", schema = "public", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "balance_transfer_id", "sort_key" }),
		@UniqueConstraint(columnNames = { "balance_transfer_id", "most_recent" }) })
public class BalanceTransferTransitions implements java.io.Serializable {

	private int id;
	private BalanceTransfers balanceTransfers;
	private String toState;
	private Serializable metadata;
	private int sortKey;
	private boolean mostRecent;
	private Date createdAt;
	private Date updatedAt;

	public BalanceTransferTransitions() {
	}

	public BalanceTransferTransitions(int id, BalanceTransfers balanceTransfers, String toState, int sortKey,
			boolean mostRecent, Date createdAt, Date updatedAt) {
		this.id = id;
		this.balanceTransfers = balanceTransfers;
		this.toState = toState;
		this.sortKey = sortKey;
		this.mostRecent = mostRecent;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public BalanceTransferTransitions(int id, BalanceTransfers balanceTransfers, String toState, Serializable metadata,
			int sortKey, boolean mostRecent, Date createdAt, Date updatedAt) {
		this.id = id;
		this.balanceTransfers = balanceTransfers;
		this.toState = toState;
		this.metadata = metadata;
		this.sortKey = sortKey;
		this.mostRecent = mostRecent;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "balance_transfer_id", nullable = false)
	public BalanceTransfers getBalanceTransfers() {
		return this.balanceTransfers;
	}

	public void setBalanceTransfers(BalanceTransfers balanceTransfers) {
		this.balanceTransfers = balanceTransfers;
	}

	@Column(name = "to_state", nullable = false)
	public String getToState() {
		return this.toState;
	}

	public void setToState(String toState) {
		this.toState = toState;
	}

	@Column(name = "metadata")
	public Serializable getMetadata() {
		return this.metadata;
	}

	public void setMetadata(Serializable metadata) {
		this.metadata = metadata;
	}

	@Column(name = "sort_key", nullable = false)
	public int getSortKey() {
		return this.sortKey;
	}

	public void setSortKey(int sortKey) {
		this.sortKey = sortKey;
	}

	@Column(name = "most_recent", nullable = false)
	public boolean isMostRecent() {
		return this.mostRecent;
	}

	public void setMostRecent(boolean mostRecent) {
		this.mostRecent = mostRecent;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

}
