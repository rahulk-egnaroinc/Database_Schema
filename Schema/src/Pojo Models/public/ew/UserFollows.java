package ew;
// Generated 10 Jun, 2016 12:07:08 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * UserFollows generated by hbm2java
 */
@Entity
@Table(name = "user_follows", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = { "user_id",
		"follow_id" }) )
public class UserFollows implements java.io.Serializable {

	private int id;
	private Users usersByUserId;
	private Users usersByFollowId;
	private Date createdAt;
	private Date updatedAt;
	private Set<UserFollowNotifications> userFollowNotificationses = new HashSet<UserFollowNotifications>(0);

	public UserFollows() {
	}

	public UserFollows(int id) {
		this.id = id;
	}

	public UserFollows(int id, Users usersByUserId, Users usersByFollowId, Date createdAt, Date updatedAt,
			Set<UserFollowNotifications> userFollowNotificationses) {
		this.id = id;
		this.usersByUserId = usersByUserId;
		this.usersByFollowId = usersByFollowId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.userFollowNotificationses = userFollowNotificationses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public Users getUsersByUserId() {
		return this.usersByUserId;
	}

	public void setUsersByUserId(Users usersByUserId) {
		this.usersByUserId = usersByUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "follow_id")
	public Users getUsersByFollowId() {
		return this.usersByFollowId;
	}

	public void setUsersByFollowId(Users usersByFollowId) {
		this.usersByFollowId = usersByFollowId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userFollows")
	public Set<UserFollowNotifications> getUserFollowNotificationses() {
		return this.userFollowNotificationses;
	}

	public void setUserFollowNotificationses(Set<UserFollowNotifications> userFollowNotificationses) {
		this.userFollowNotificationses = userFollowNotificationses;
	}

}
