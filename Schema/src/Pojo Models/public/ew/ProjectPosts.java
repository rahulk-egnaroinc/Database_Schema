package ew;
// Generated 10 Jun, 2016 12:07:08 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProjectPosts generated by hbm2java
 */
@Entity
@Table(name = "project_posts", schema = "public")
public class ProjectPosts implements java.io.Serializable {

	private int id;
	private Users users;
	private Projects projects;
	private String title;
	private String commentHtml;
	private Date createdAt;
	private Date updatedAt;
	private Boolean exclusive;
	private Set<ProjectPostNotifications> projectPostNotificationses = new HashSet<ProjectPostNotifications>(0);

	public ProjectPosts() {
	}

	public ProjectPosts(int id, Users users, Projects projects, String title, String commentHtml) {
		this.id = id;
		this.users = users;
		this.projects = projects;
		this.title = title;
		this.commentHtml = commentHtml;
	}

	public ProjectPosts(int id, Users users, Projects projects, String title, String commentHtml, Date createdAt,
			Date updatedAt, Boolean exclusive, Set<ProjectPostNotifications> projectPostNotificationses) {
		this.id = id;
		this.users = users;
		this.projects = projects;
		this.title = title;
		this.commentHtml = commentHtml;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.exclusive = exclusive;
		this.projectPostNotificationses = projectPostNotificationses;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_id", nullable = false)
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "comment_html", nullable = false)
	public String getCommentHtml() {
		return this.commentHtml;
	}

	public void setCommentHtml(String commentHtml) {
		this.commentHtml = commentHtml;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "exclusive")
	public Boolean getExclusive() {
		return this.exclusive;
	}

	public void setExclusive(Boolean exclusive) {
		this.exclusive = exclusive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectPosts")
	public Set<ProjectPostNotifications> getProjectPostNotificationses() {
		return this.projectPostNotificationses;
	}

	public void setProjectPostNotificationses(Set<ProjectPostNotifications> projectPostNotificationses) {
		this.projectPostNotificationses = projectPostNotificationses;
	}

}
