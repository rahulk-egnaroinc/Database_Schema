package ew;
// Generated 10 Jun, 2016 12:07:08 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * FlexibleProjectTransitions generated by hbm2java
 */
@Entity
@Table(name = "flexible_project_transitions", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = {
		"flexible_project_id", "sort_key" }) )
public class FlexibleProjectTransitions implements java.io.Serializable {

	private int id;
	private FlexibleProjectStates flexibleProjectStates;
	private FlexibleProjects flexibleProjects;
	private String metadata;
	private int sortKey;
	private boolean mostRecent;
	private Date createdAt;
	private Date updatedAt;

	public FlexibleProjectTransitions() {
	}

	public FlexibleProjectTransitions(int id, FlexibleProjectStates flexibleProjectStates,
			FlexibleProjects flexibleProjects, int sortKey, boolean mostRecent, Date createdAt, Date updatedAt) {
		this.id = id;
		this.flexibleProjectStates = flexibleProjectStates;
		this.flexibleProjects = flexibleProjects;
		this.sortKey = sortKey;
		this.mostRecent = mostRecent;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public FlexibleProjectTransitions(int id, FlexibleProjectStates flexibleProjectStates,
			FlexibleProjects flexibleProjects, String metadata, int sortKey, boolean mostRecent, Date createdAt,
			Date updatedAt) {
		this.id = id;
		this.flexibleProjectStates = flexibleProjectStates;
		this.flexibleProjects = flexibleProjects;
		this.metadata = metadata;
		this.sortKey = sortKey;
		this.mostRecent = mostRecent;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "to_state", nullable = false)
	public FlexibleProjectStates getFlexibleProjectStates() {
		return this.flexibleProjectStates;
	}

	public void setFlexibleProjectStates(FlexibleProjectStates flexibleProjectStates) {
		this.flexibleProjectStates = flexibleProjectStates;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "flexible_project_id", nullable = false)
	public FlexibleProjects getFlexibleProjects() {
		return this.flexibleProjects;
	}

	public void setFlexibleProjects(FlexibleProjects flexibleProjects) {
		this.flexibleProjects = flexibleProjects;
	}

	@Column(name = "metadata")
	public String getMetadata() {
		return this.metadata;
	}

	public void setMetadata(String metadata) {
		this.metadata = metadata;
	}

	@Column(name = "sort_key", nullable = false)
	public int getSortKey() {
		return this.sortKey;
	}

	public void setSortKey(int sortKey) {
		this.sortKey = sortKey;
	}

	@Column(name = "most_recent", nullable = false)
	public boolean isMostRecent() {
		return this.mostRecent;
	}

	public void setMostRecent(boolean mostRecent) {
		this.mostRecent = mostRecent;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 29)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 29)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

}
